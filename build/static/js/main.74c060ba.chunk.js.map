{"version":3,"sources":["components/redux/TaskList-reducer.js","components/Task/TaskOnHook.js","components/TaskList/TaskList.js","components/TaskList/TaskListContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.js","components/Footer/filters/filters.jsx","components/Footer/footer.jsx","components/Footer/FooterContainer.js","App.js","components/redux/redux-store.js","index.js"],"names":["TYPE_DELETE_TASK","TYPE_ONLABEL_CLICK","TYPE_ADD_TASK","TYPE_EDIT_TASK","initialState","tasks","text","id","uuidv4","completed","checkbox","status","itemsLeft","itemsActive","taskListReducer","state","action","stateCopy","type","newTask","filter","item","length","task","newTasks","map","itemId","alert","HookTask","props","onDeleteItem","onEditItem","onLabelClicked","useState","editMode","setEditMode","itemText","setItemText","console","log","className","defaultChecked","onClick","role","placeholder","onKeyPress","el","key","onChange","currentTarget","value","TaskOnHook","TaskList","elements","exact","path","render","elementsAll","compose","connect","dispatch","editItemAC","labelClickAC","Header","handleKeyPress","inputnewItem","useRef","useEffect","current","focus","ref","HeaderContainer","min","sec","AddItemAC","Filters","to","Footer","FooterContainer","App","reducers","combineReducers","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74c060ba.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nconst TYPE_DELETE_TASK = 'DELETE-TASK';\nconst TYPE_ONLABEL_CLICK = 'ONLABEL-CLICK';\nconst TYPE_ADD_TASK = 'ADD-TASK';\nconst TYPE_EDIT_TASK = 'EDIT-TASK';\nconst TYPE_TIMER = 'TYPE_TIMER';\n\nconst initialState = {\n    tasks: [\n        {\n            text: 'Completed task',\n            id: uuidv4(),\n            completed: 'completed',\n            checkbox: true,\n            status: 'completed'\n        },\n        {\n            text: 'Editing task',\n            id: uuidv4(),\n            completed: '',\n            checkbox: false,\n            status: 'active'\n        },\n        {\n            text: 'Active task',\n            id: uuidv4(),\n            completed: '',\n            checkbox: false,\n            status: 'active'\n        },\n    ],\n    itemsLeft: 1,\n    itemsActive: 2,\n};\nconst taskListReducer = (state = initialState, action) => {\n    const stateCopy = {...state};\n    const {tasks} = state;\n    switch (action.type) {\n        case TYPE_ADD_TASK: {\n            const id = uuidv4();\n            const newTask = {\n                text: action.text,\n                id,\n                completed: '',\n                checkbox: false,\n                status: 'active',\n            };\n            stateCopy.tasks = [...tasks, newTask];\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed === 'completed');\n            const itemsActive = stateCopy.tasks.filter((item) => item.completed !== 'completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n                itemsActive: itemsActive.length\n            };\n        }\n        case TYPE_DELETE_TASK: {\n            const newTask = tasks.filter((item) => item.id !== action.task.id);\n            stateCopy.tasks = [...newTask];\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed === 'completed');\n            const itemsActive = stateCopy.tasks.filter((item) => item.completed !== 'completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n                itemsActive: itemsActive.length\n            };\n        }\n        case TYPE_ONLABEL_CLICK: {\n            // eslint-disable-next-line no-debugger\n            // debugger\n            const newTasks = stateCopy.tasks.map((item) => {\n                    if ((item.id === action.task.id) && (action.task.completed === '')) {\n                        return {...item, completed: 'completed', status: 'completed', checkbox: true}\n                    }\n                    if ((item.id === action.task.id) && (action.task.completed === 'completed')) {\n                        return {...item, completed: '', status: 'active', checkbox: false}\n                    }\n                    return item\n                }\n            );\n            stateCopy.tasks = [...newTasks];\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed === 'completed');\n            const itemsActive = stateCopy.tasks.filter((item) => item.completed !== 'completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n                itemsActive: itemsActive.length\n            };\n        }\n        case TYPE_EDIT_TASK: {\n            if (action.text.length < 25) {\n                const newTasks = stateCopy.tasks.map((item) => {\n                        if (item.id === action.itemId) {\n                            return {...item, text: action.text}\n                        }\n                        return item\n                    }\n                );\n                stateCopy.tasks = [...newTasks];\n            }\n            else{\n                alert(\"Слшиком большое текст, вводите, не более 25 символов\")\n            }\n            const itemsLeft = stateCopy.tasks.filter((item) => item.completed === 'completed');\n            const itemsActive = stateCopy.tasks.filter((item) => item.completed !== 'completed');\n            return {\n                tasks: stateCopy.tasks,\n                itemsLeft: itemsLeft.length,\n                itemsActive: itemsActive.length\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport const deleteItemAC = (task) => ({task, type: TYPE_DELETE_TASK});\nexport const labelClickAC = (task, checkbox) => ({task, checkbox, type: TYPE_ONLABEL_CLICK});\nexport const AddItemAC = (text) => ({text, type: TYPE_ADD_TASK});\nexport const editItemAC = (text, itemId) => ({text, itemId, type: TYPE_EDIT_TASK});\nexport const playTimerAC = (min, sec) => ({min, sec, type: TYPE_TIMER})\nexport default taskListReducer;\n","import React, { useState} from 'react';\nimport PropTypes from \"prop-types\";\n\nconst TaskOnHook = (props) => (<HookTask {...props}/>)\nconst HookTask = (props) => {\n    const {onDeleteItem, item, onEditItem, onLabelClicked} = props;\n    const {completed, id, text, checkbox, status} = item;\n    const [editMode, setEditMode] = useState(false)\n    const [itemText, setItemText] = useState('')\n    console.log(item)\n    const deactivateEditMode = (el) => {\n        if (el.key === 'Enter') {\n            setEditMode(false)\n            onEditItem(itemText, id);\n        }\n    };\n    const onTextChange = (el) => {\n        setItemText(el.currentTarget.value);\n    };\n    return (\n        <li className={completed} key={id}>\n            {!editMode && (\n                <div className=\"view\">\n                    {!checkbox && (\n                        <div>\n                            <input className=\"toggle\" type=\"checkbox\" defaultChecked={false}\n                                   onClick={() => {\n                                       onLabelClicked(item, checkbox)\n                                   }}/>\n                            <label>\n                                <span className=\"description\" role=\"presentation\"\n                                      onClick={() => {\n                                          onLabelClicked(item, checkbox)\n                                      }}>\n                                    {text}\n                                </span>\n                                <span className=\"status\">status: {status}</span>\n                            </label>\n                        </div>\n                    )}\n                    {checkbox && (\n                        <div>\n                            <input className=\"toggle\" type=\"checkbox\" defaultChecked\n                                   onClick={() => {\n                                       onLabelClicked(item, checkbox)\n                                   }}/>\n                            <label>\n\t\t\t\t\t\t\t\t\t<span className=\"description\" role=\"presentation\"\n                                          onClick={() => {\n                                              onLabelClicked(item, checkbox)\n                                          }}>\n\t\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t\t</span>\n                                    <span className=\"status\">status: {status}</span>\n                            </label>\n                        </div>\n                    )}\n                    <div>\n                        <button type=\"button\" className=\"icon icon-edit\" onClick={() => setEditMode(true)}\n                                aria-label=\"edit-btn\"/>\n                    </div>\n                    <button\n                        type=\"button\" className=\"icon icon-destroy\"\n                        onClick={() => {\n                            onDeleteItem(item);\n                        }} aria-label=\"destroy-btn\"\n                    />\n                </div>\n            )}\n            {editMode && (\n                <div>\n                    <input\n                        className=\"new-todo\" placeholder=\"Edit your message\"\n                        onKeyPress={deactivateEditMode} onChange={onTextChange}\n                    />\n                </div>\n            )}\n        </li>\n    )\n}\nHookTask.propTypes = {\n    onEditItem: PropTypes.func.isRequired,\n    onDeleteItem: PropTypes.func.isRequired,\n    onLabelClicked: PropTypes.func.isRequired,\n    item: PropTypes.instanceOf(Object).isRequired,\n};\nexport default TaskOnHook;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route} from 'react-router-dom';\nimport TaskOnHook from \"../Task/TaskOnHook\";\n\nconst TaskList = (props) => {\n    const {tasks} = props;\n    const elements = tasks.map((item) =>\n        item.completed !== 'completed' ? (\n            <Route\n                exact path=\"/active\" render={() => (<TaskOnHook key={item.id} item={item}{...props}/>)}\n            />\n        ) :  (\n            <Route\n                exact path=\"/completed\" render={() => (<TaskOnHook key={item.id} item={item}{...props}/>)}\n            />\n        )\n    );\n    const elementsAll = tasks.map((item) => (\n        <Route\n            exact path=\"/all\" render={() => (<TaskOnHook key={item.id}item={item}{...props}/>)}\n        />\n    ));\n    return (\n        <ul className=\"todo-list\">\n            {elementsAll}\n            {elements}\n        </ul>\n    );\n};\n\nTaskList.propTypes = {\n    tasks: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default TaskList;\n","import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport { deleteItemAC, editItemAC, labelClickAC} from '../redux/TaskList-reducer';\nimport TaskList from './TaskList';\n\nconst TaskListContainer = (props) => <TaskList {...props} />;\n\nconst mapStateToProps = (state) => ({\n    tasks: state.taskListReducer.tasks,\n    itemsLeft: state.taskListReducer.itemsLeft,\n    itemsActive: state.taskListReducer.itemsActive\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onEditItem: (action, itemId) => {\n        dispatch(editItemAC(action, itemId));\n    },\n    onDeleteItem: (action) => {\n        dispatch(deleteItemAC(action));\n    },\n    onLabelClicked: (action, checkbox) => {\n        dispatch(labelClickAC(action, checkbox));\n    },\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(TaskListContainer);\n","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n    const {handleKeyPress} = props;\n    const inputnewItem = useRef(null);\n    useEffect(() => {\n        inputnewItem.current.focus();\n    })\n    const keyPress = (el) => {\n        if (el.key === 'Enter') {\n            const text = inputnewItem.current.value;\n            if (text.length < 25) {\n                handleKeyPress(text)\n            }\n            else{\n                alert(\"Слшиком большое текст, вводите, не более 25 символов\")\n            }\n            inputnewItem.current.value = '';\n        }\n    }\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <div className='header-container'>\n                <input className=\"new-todo\" placeholder=\"What needs to be done?\"\n                       ref={inputnewItem} onKeyPress={keyPress}/>\n            </div>\n        </header>\n    );\n};\nHeader.propTypes = {\n    handleKeyPress: PropTypes.func.isRequired,\n};\nexport default Header;\n","import {connect} from 'react-redux';\nimport Header from './header';\nimport {AddItemAC} from '../redux/TaskList-reducer';\n\nconst mapStateToProps = (state) => ({\n    tasks: state.taskListReducer.tasks,\n    itemsLeft: state.taskListReducer.itemsLeft,\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleKeyPress: (text, min, sec) => {\n        dispatch(AddItemAC(text, min, sec));\n    },\n});\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Filters = () => (\n\t<ul className=\"filters\">\n\t\t<NavLink exact to=\"/all\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">\n\t\t\t\t\tAll\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/active\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">active</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/completed\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">completed</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t</ul>\n);\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './filters/filters';\n\nconst Footer = (props) => {\n\tconst { itemsLeft, itemsActive } = props;\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span className=\"todo-count\">{itemsLeft} completed items</span>\n\t\t\t<span className=\"todo-count\">{itemsActive} active items</span>\n\t\t\t<Filters />\n\t\t</footer>\n\t);\n};\nFooter.propTypes = {\n\titemsLeft: PropTypes.number.isRequired,\n\titemsActive: PropTypes.number.isRequired,\n};\nexport default Footer;\n","import { connect } from 'react-redux';\nimport Footer from './footer';\n\nconst mapStateToProps = (state) => ({\n\titemsLeft: state.taskListReducer.itemsLeft,\n\titemsActive: state.taskListReducer.itemsActive\n});\nconst mapDispatchToProps = () => ({\n\n});\nconst FooterContainer = connect(mapStateToProps, mapDispatchToProps)(Footer);\nexport default FooterContainer;\n","import React from 'react';\nimport TaskListContainer from './components/TaskList/TaskListContainer';\nimport HeaderContainer from './components/Header/headerContainer';\nimport FooterContainer from './components/Footer/FooterContainer';\n\nconst App = () => (\n\t<section className=\"todoapp\">\n\t\t<HeaderContainer />\n\t\t<section className=\"main\">\n\t\t\t<TaskListContainer />\n\t\t\t<FooterContainer />\n\t\t</section>\n\t</section>\n);\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport taskListReducer from './TaskList-reducer';\n\nconst reducers = combineReducers({\n\ttaskListReducer,\n});\n\nconst store = createStore(reducers);\nwindow.store = store;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport store from './components/redux/redux-store';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}